name: Build & Push to ACR

on:
  push:
    branches: ["dev", "main", "acr-deploy-fix"] # keep or edit as you like
    tags: ["v*"] # build on version tags too (e.g., v1.2.3)
  workflow_dispatch:

# Needed for OIDC (azure/login) and to read the repo
permissions:
  contents: read
  id-token: write

# Expect these repo-level items to be set:
#   Actions → Variables:
#     - ACR_NAME = emcdevacr-c9f8cyh8hzhzb4d3
#     - ACR_LOGIN_SERVER = emcdevacr-c9f8cyh8hzhzb4d3.azurecr.io
#   Actions → Secrets:
#     - AZURE_TENANT_ID
#     - AZURE_SUBSCRIPTION_ID
#     - AZURE_CLIENT_ID
env:
  IMAGE_NAME: beacon-index-ai
  ACR_NAME: ${{ vars.ACR_NAME }}
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}

# Avoid overlapping builds for same ref
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC; no client secret)
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}

      # Use the short registry resource name here (NOT the login server)
      - name: Log in to ACR using Azure session
        run: az acr login --name "${{ env.ACR_NAME }}"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image tags safely
        id: tags
        shell: bash
        env:
          ACR_LOGIN_SERVER: ${{ env.ACR_LOGIN_SERVER }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          set -euo pipefail

          TAGS="${ACR_LOGIN_SERVER}/${IMAGE_NAME}:sha-${GITHUB_SHA::7}"

          # Add "latest" on any branch build
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            TAGS+=$'\n'"${ACR_LOGIN_SERVER}/${IMAGE_NAME}:latest"
          fi

          # Add version tag on tag builds (e.g., v1.2.3)
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            TAGS+=$'\n'"${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${VERSION}"
          fi

          {
            echo "TAGS<<EOF"
            printf "%s\n" "${TAGS}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: ${{ steps.tags.outputs.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
